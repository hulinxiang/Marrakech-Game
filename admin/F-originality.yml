# IMPORTANT: It is very important that you correctly complete this originality
# statement.
#
# This is your statement of your submitted work being your own.
# Incorrectly filling out this statement could lead to charges
# of academic misconduct.
# 
# For information on how to fill this out correctly, see
# https://cs.anu.edu.au/courses/comp1110/help/faq/09-originality/
#

declaration: >-
  Stage F represents the culmination of the entire assignment.  We declare that
  everything we have submitted for for all stages of this assignment was
  entirely our own work, with the following exceptions:


# Use this to list any code that you used that you did not write,
# aside from code provided by the lecturer.  Provide a comment
# explaining your use and the URL to that code and the licence for
# that code
#
# Add as many "url+licence+comment" entries as necessary
# (or remove it altogether if you haven't used any external code)
code:
  - comment: Instead of generating a random integer to shuffle the players, we implemented the following line
      which saved a lot of time. From assignOrder() method in the Game class = Collections.shuffle(nameArray).
    url: https://www.geeksforgeeks.org/collections-shuffle-method-in-java-with-examples/
    licence: Public domain

  - comment: I (Lize) had to research how to remove all nodes from a Stackpane except the button that has been clicked.
      my research gave me the following line, which is used in the tielButton constructor in the Game class =
      rugPane.getChildren().removeIf(node -> node instanceof Button && node != this);
      Note, the code is not duplicate, but was just inspired by the article below.
    url: https://stackoverflow.com/questions/35284772/how-to-remove-individual-nodes-within-groups-on-a-pane-javafx
    licence: Public domain




# Sign *your* name and uids here. (Remove entries if you have fewer
# than three members.)
signatures:
  - name:
    uid:
  - name:
    uid:
  - name: Linxiang Hu
    uid: u7633783
